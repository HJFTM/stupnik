name: Generate PDF (Puppeteer)

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write

env:
  CURRENT_PROJECT: ${{ vars.CURRENT_PROJECT }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£ Checkout MAIN branch ‚Äì sadr≈æi skriptu i kod
    - name: Checkout main
      uses: actions/checkout@v3
      with:
        ref: main
        path: main

    # 2Ô∏è‚É£ Checkout GH-PAGES branch ‚Äì gdje ≈°aljemo PDF
    - name: Checkout gh-pages
      uses: actions/checkout@v3
      with:
        ref: gh-pages
        path: gh-pages

    # 3Ô∏è‚É£ Cache Puppeteer
    - name: Cache Puppeteer
      uses: actions/cache@v3
      with:
        path: ~/.cache/puppeteer
        key: ${{ runner.os }}-puppeteer

    # 4Ô∏è‚É£ Setup Node.js + install Puppeteer
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install Puppeteer
      run: npm install puppeteer
      working-directory: main

    # 5Ô∏è‚É£ Pokreni skriptu koja generira PDF (sprema ga u gh-pages/pdf)
    - name: Generate PDF
      run: node main/hello-framework/scripts/generate-pdf.js
      env:
        OUTPUT_DIR: ../gh-pages/pdf
        CURRENT_PROJECT: ${{ env.CURRENT_PROJECT }}

    # 6Ô∏è‚É£ Rebase GH-PAGES na zadnje stanje ‚Äì sprjeƒçava konflikte
    - name: Pull and rebase latest gh-pages
      run: |
        cd gh-pages
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git fetch origin
        git rebase origin/gh-pages || git rebase --abort

    # 7Ô∏è‚É£ Commit PDF ako ima promjena
    - name: Commit PDF to gh-pages
      run: |
        cd gh-pages
        git add pdf/${{ env.CURRENT_PROJECT }}.pdf
        git commit -m "üìÑ Dodan PDF za ${{ env.CURRENT_PROJECT }}" || echo "No changes"
        git push origin gh-pages
